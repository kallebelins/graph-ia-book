## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates
*.env

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
bin/[Dd]ebug/
bin/[Dd]ebugPublic/
bin/[Rr]elease/
bin/[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
[Aa][Rr][Mm]64[Ee][Cc]/
bld/
[Oo]bj/
[Oo]ut/
[Ll]og/
[Ll]ogs/

# Build results on 'Bin' directories
**/[Bb]in/*
# Uncomment if you have tasks that rely on *.refresh files to move binaries
# (https://github.com/github/gitignore/pull/3736)
#!**/[Bb]in/*.refresh

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*
*.trx

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Approval Tests result files
*.received.*

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.idb
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
# but not Directory.Build.rsp, as it configures directory-level build defaults
!Directory.Build.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverage*.info

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio 6 technical files
*.ncb
*.aps

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
**/.paket/paket.exe
paket-files/

# FAKE - F# Make
**/.fake/

# CodeRush personal settings
**/.cr/personal

# Python Tools for Visual Studio (PTVS)
**/__pycache__/
*.pyc

# Cake - Uncomment if you are using it
#tools/**
#!tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog
MSBuild_Logs/

# AWS SAM Build and Temporary Artifacts folder
.aws-sam

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
**/.mfractor/

# Local History for Visual Studio
**/.localhistory/

# Visual Studio History (VSHistory) files
.vshistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
**/.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

# VS Code files for those working on multiple tools
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# Windows Installer files from build outputs
*.cab
*.msi
*.msix
*.msm
*.msp

# ========================================
# SEMANTIC KERNEL GRAPH SPECIFIC IGNORES
# ========================================

# Benchmark Results and Artifacts
**/BenchmarkDotNet.Artifacts/
**/BenchmarkDotNet.Artifacts/**
*.benchmark
*.benchmark.md
*.benchmark.html
*.benchmark.csv
*.benchmark.json

# Test Results and Coverage
**/TestResults/
**/TestResults/**
*.testresults
*.coverage
*.coveragexml
coverage.*
*.opencover.xml

# Performance and Memory Dumps
*.dmp
*.mdmp
*.perf
*.perflog
*.etl
*.etlx

# Semantic Kernel Specific
**/SemanticKernel.Graph.Examples/bin/**
**/SemanticKernel.Graph.Examples/obj/**
**/SemanticKernel.Graph.Tests/bin/**
**/SemanticKernel.Graph.Tests/obj/**
**/SemanticKernel.Graph/bin/**
**/SemanticKernel.Graph/obj/**

# Configuration Files (Local)
appsettings.Development.json
appsettings.Local.json
appsettings.Production.json
*.local.json
*.dev.json
*.prod.json

# API Keys and Secrets
*.key
*.pem
*.p12
*.pfx
secrets.json
secrets.*.json
*.env.local
*.env.development
*.env.production

# Logs and Debug Files
**/logs/
**/Logs/
*.log
*.log.*
debug.log
error.log
trace.log
*.debug
*.trace

# Temporary Files
*.tmp
*.temp
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# IDE and Editor Files
.vscode/
.idea/
*.sublime-*
*.code-workspace
*.suo
*.user
*.userosscache
*.sln.docstates

# Build Artifacts
**/artifacts/
**/build/
**/dist/
**/out/
**/target/

# Package Management
**/packages/
**/node_modules/
**/.nuget/
nuget.config.local

# Database Files
*.db
*.sqlite
*.sqlite3
*.mdf
*.ldf

# Backup Files
*.bak
*.backup
*.old
*.orig
*.save

# Cache Directories
**/.cache/
**/.temp/
**/temp/

# Memory and State Files
*.state
*.cache
*.mem
*.dump

# Azure and Cloud Specific
.azure/
.aws/
*.azure.json
*.aws.json

# Docker
.dockerignore
Dockerfile.local
docker-compose.override.yml

# Local Development
.local/
local/
dev/
development/

# Performance Profiling
*.vsp
*.vspx
*.psess
*.sap

# Code Analysis
*.sarif
*.xml
!*.csproj
!*.sln
!*.cs
!*.md
!*.txt
!*.json
!*.yml
!*.yaml

# Generated Documentation
**/docs/_build/
**/docs/_site/
**/docs/.doctrees/
**/docs/api/

# Semantic Kernel Graph Specific Patterns
**/SemanticKernel.Graph.Examples/Benchmarks/results/
**/SemanticKernel.Graph.Examples/Benchmarks/artifacts/
**/SemanticKernel.Graph.Examples/Benchmarks/logs/
**/SemanticKernel.Graph.Examples/Benchmarks/temp/

# Memory Optimization Files
*.memcache
*.memdump
*.heap
*.gc

# Graph State Files
*.graphstate
*.graphcache
*.graphdump

# Kernel Optimization Files
*.kernelcache
*.kernelstate
*.kerneldump

# Agent State Files
*.agentstate
*.agentcache
*.agentdump

# Memory Store Files
*.memory
*.memorycache
*.memorydump

# Performance Monitoring
*.perfmon
*.perflog
*.trace
*.etl

# Security and Authentication
*.pwd
*.pass
*.secret
*.token
*.auth

# Local Development Tools
.localhistory/
.history/
.vscode/
.idea/
*.suo
*.user
*.userosscache
*.sln.docstates

# Temporary Build Files
*.tmp
*.temp
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# Generated Code
**/Generated/
**/generated/
**/AutoGenerated/
**/autogenerated/

# Semantic Kernel Graph Generated Files
**/SemanticKernel.Graph/Generated/
**/SemanticKernel.Graph.Examples/Generated/
**/SemanticKernel.Graph.Tests/Generated/

# Performance Test Results
**/PerformanceTests/results/
**/PerformanceTests/artifacts/
**/PerformanceTests/logs/

# Memory Test Results
**/MemoryTests/results/
**/MemoryTests/artifacts/
**/MemoryTests/logs/

# Integration Test Results
**/IntegrationTests/results/
**/IntegrationTests/artifacts/
**/IntegrationTests/logs/

# Unit Test Results
**/UnitTests/results/
**/UnitTests/artifacts/
**/UnitTests/logs/

# Benchmark Specific
**/benchmarks/results/
**/benchmarks/artifacts/
**/benchmarks/logs/
**/benchmarks/temp/
**/benchmarks/cache/

# Semantic Kernel Graph Cache
**/.cache/
**/temp/
**/.temp/
**/tmp/
**/.tmp/

# Local Development Environment
.env.local
.env.development
.env.production
.env.test
.env.staging

# IDE Specific
.vscode/settings.json
.vscode/launch.json
.vscode/tasks.json
.idea/workspace.xml
.idea/tasks.xml
.idea/usage.statistics.xml

# OS Generated Files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows Generated Files
*.lnk
*.tmp
*.temp
*.swp
*.swo
*~

# Linux Generated Files
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# macOS Generated Files
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Semantic Kernel Graph Project Specific
**/SemanticKernel.Graph.Examples/appsettings.Development.json
**/SemanticKernel.Graph.Examples/appsettings.Production.json
**/SemanticKernel.Graph.Examples/appsettings.Local.json
**/SemanticKernel.Graph.Tests/appsettings.Development.json
**/SemanticKernel.Graph.Tests/appsettings.Production.json
**/SemanticKernel.Graph.Tests/appsettings.Local.json

# Benchmark Configuration
**/benchmark.config.json
**/benchmark.settings.json
**/performance.config.json

# Memory and Performance Monitoring
**/memory.monitor
**/performance.monitor
**/system.monitor
**/health.monitor

# Test Coverage Reports
**/coverage/
**/coverages/
**/testcoverage/
**/testcoverages/

# Log Files
**/logs/
**/log/
**/logging/
**/debug/
**/debugging/
**/trace/
**/tracing/

# Configuration Overrides
**/config.local.json
**/config.dev.json
**/config.prod.json
**/config.test.json
**/config.staging.json

# Semantic Kernel Graph Specific Overrides
**/SemanticKernel.Graph.Examples/config.local.json
**/SemanticKernel.Graph.Examples/config.dev.json
**/SemanticKernel.Graph.Examples/config.prod.json
**/SemanticKernel.Graph.Tests/config.local.json
**/SemanticKernel.Graph.Tests/config.dev.json
**/SemanticKernel.Graph.Tests/config.prod.json

# End of Semantic Kernel Graph Specific Ignores
